import requests
from bs4 import BeautifulSoup
import re
import html

# URLs
LOGIN_URL = "https://auctions.aleado.ru/auth/login.php"
SEARCH_URL = "https://auctions.aleado.ru/auctions?p=project/searchform&searchtype=max&s&ld"
MODELS_URL = "https://auctions.aleado.ru/auctions/"

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
payload = {
    "username": "Dunaew112@gmail.com",
    "password": "P2mmm240",
    "lang": "ru",
    "cur_url": "YXVjdGlvbnM/cD1wcm9qZWN0L3NlYXJjaGZvcm0mc2VhcmNodHlwZT1tYXgmcyZsZA==",
    "Submit": "–í—Ö–æ–¥"
}

# –ó–∞–≥–æ–ª–æ–≤–∫–∏
headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3"
}

# –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
session = requests.Session()

# –õ–æ–≥–∏–Ω–∏–º—Å—è
response = session.post(LOGIN_URL, data=payload, headers=headers)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥
if "logout" in response.text.lower() or "–≤—ã—Ö–æ–¥" in response.text.lower():
    print(" –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!")
else:
    print(" –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞! –ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å.")
    exit()

# –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞
response = session.get(SEARCH_URL, headers=headers)
soup = BeautifulSoup(response.text, "html.parser")

# –ù–∞—Ö–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –º–∞—Ä–æ–∫
brand_select = soup.find("select", {"id": "mrk"})
if not brand_select:
    print(" –û—à–∏–±–∫–∞! –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–ø–∏—Å–æ–∫ –º–∞—Ä–æ–∫.")
    exit()

brands = {option.text.strip().upper(): option["value"].strip() for option in brand_select.find_all("option") if option["value"] != "-1"}

# –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_input = input("–í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è: ").strip().upper()

if user_input in brands:
    brand_id = brands[user_input]
    print(f"–ù–∞–π–¥–µ–Ω–∞ –º–∞—Ä–∫–∞: {user_input}, ID: {brand_id}")
else:
    print("–ú–∞—Ä–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
    exit()

#  –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª–∏ –ø–æ ID –º–∞—Ä–∫–∏
params = {
    "p": "project/searchform",
    "rs": "loadModels",
    "rst": "",
    "rsrnd": "1743165930450",
    "rsargs[]": [brand_id, "{}"]
}

response = session.get(MODELS_URL, params=params, headers=headers)

#–ü–û–õ–ù–´–ô –í–´–í–û–î –û–¢–í–ï–¢–ê (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
print("\nüîç –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å –º–æ–¥–µ–ª–µ–π:\n", response.text[:1000])  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤

# üõ† **–ß–∏—Å—Ç–∏–º HTML-–∫–æ–¥ –∏–∑ JavaScript-—Å—Ç—Ä–æ–∫–∏**
match = re.search(r"var res = '(.*?)';", response.text, re.DOTALL)

if not match:
    print(" –û—à–∏–±–∫–∞! –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ HTML-–∫–æ–¥ –º–æ–¥–µ–ª–µ–π.")
    exit()

# –†–∞—Å–∫–æ–¥–∏—Ä—É–µ–º HTML-—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
models_html = html.unescape(match.group(1))

# –£–±–∏—Ä–∞–µ–º —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã `\n`, `\r`, `\'`
models_html = models_html.replace("\\n", "").replace("\\r", "").replace("\\'", "'")

# –í–´–í–û–î–ò–ú –û–ß–ò–©–ï–ù–ù–´–ô HTML (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏)
print("\nüîç –û—á–∏—â–µ–Ω–Ω—ã–π HTML-–∫–æ–¥ –º–æ–¥–µ–ª–µ–π:\n", models_html[:1000])  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤

# –ü–∞—Ä—Å–∏–º —á–µ—Ä–µ–∑ BeautifulSoup
models_html = models_html.replace('\\"', '"')  # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–≤—ã—á–µ–∫
soup = BeautifulSoup(models_html, "html.parser")


# –ò—â–µ–º —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π
model_select = soup.find("select", {"id": "mdl"})
if not model_select:
    print("‚ùå –û—à–∏–±–∫–∞! –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π.")
    exit()

# –ò–∑–≤–ª–µ–∫–∞–µ–º –º–æ–¥–µ–ª–∏
models = {option.text.strip().upper(): option["value"].strip() for option in model_select.find_all("option") if option["value"] != "-1"}

# **–í—ã–≤–æ–¥–∏–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏**
print("\n –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –¥–ª—è –º–∞—Ä–∫–∏", user_input)
for model_name, model_id in models.items():
    print(f" - {model_name}: {model_id}")

# –ó–∞–ø—Ä–æ—Å –º–æ–¥–µ–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
model_input = input("\n–í–≤–µ–¥–∏—Ç–µ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è: ").strip().upper()

if model_input in models:
    model_id = models[model_input]
    print(f"–ù–∞–π–¥–µ–Ω–∞ –º–æ–¥–µ–ª—å: {model_input}, ID: {model_id}")
else:
    print(" –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")